<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAXgAAAEKCAYAAAAYd05sAAAAIGNIUk0AAHolAACAgwAA+f8AAIDpAAB1
        MAAA6mAAADqYAAAXb5JfxUYAAAAJcEhZcwAACxMAAAsTAQCanBgAABoNSURBVHhe7d1tjFzlecbxCQGU
        IFShqEIRKlIUtRJSpHzIp36gaiqsNg0oL6RUoCZpkkqhipLIagIpSYislFCUNipIddJAKgLY4aXGiaEW
        sYIJBgLGGGJjDDbG2I5f1ma93p2d2Xm3qO9JZzU7e9nemfucmbnP+X/4SdEV492d89zXHj9z5pzC22+/
        DQDIIBkCAOKTIQAgPhkCAOKTIQAgPhkCAOKTIQAgPhkCAOKTIQAgPhkCAOKTIQAgPhkCAOKTIQAgPhkC
        AOKTIQAgPhkCAOKTIQAgPhkCAOKTIQAgPhkCAOKTIQAgPhkCAOKTIQAgPhkCAOKTIQAgPhkCAOKTIQAg
        PhkCAOKTIQAgPhkCAOKTIQAgPhkCAOKTIQAgPhkCAOKTIQAgPhkCAOKTIQAgPhkCAOKTIQAgPhkCAOKT
        IQAgPhkCAOKTIQAgPhkCAOKTIfxONpvo0Wo0Cs16va1WqRaKM8V5+w8cnLflpW0XPfmbze8fxMs7Xzuv
        ++86dHii/ffXq7X211ffF5pyDSM+GcJPDVGWWWlbkR44eKjw7AsvXtwp3Nv+88eHul352evfHpXe78XY
        92i/bEyefwGoNYz4ZAg/NUSRNWq1wvT0TGHvvv2FTnn3Frgq1Ui6f5bOz9cp/6z/AlBrGPHJEH5qiCJ6
        cfuOC7JS4F695d/5BZCF4ldrGPHJEH5qiKKZnZ0tUOxn11v8EUtfrWHEJ0P4qSGKxspKFRrOTpW+bXOp
        13kcqDWM+GQIPzVEkezc9fo5nL0nq7fw1es+KmoNIz4Zwk8NUZqab+yV+SCqlQpbMylTZ/jqWAyLWsOI
        T4bwU0OUKLuefPfrhdJXvvbbmSs+Wp+77Qe3yz83ACscVUpIT3fhW9nbZafq2KRFrWHEJ0P4qSHyapXK
        heq9q5dZoU9ffkVr6o/++G1j/7t58JD8b/p18NARzt7HQPfZ/TDesFVrGPHJEH5qiAZyargbO14p9JZ6
        N/v/5H87AM7ex0/3mX1aZa/WMOKTIfzUEPWjdeytwtxt/3776Uq9W2PL1nPV39Ev+2g/Z+/jrbvsk7wq
        R61hxCdD+KkhOqu5uUJ5xS2rznS23sv+nO3Hy7+vT5y9x9Jd9up49kOtYcQnQ/ipITqd1uRkofT1mzZZ
        sasSP5Oktme4ciYuO26dslfHdinUGkZ8MoSfGqJezVd3nXFvfSnqjz/xHvV398tuEKbKA3F0F32/Z/Vq
        DSM+GcJPDVFbrVYo3fr9ld5iN/bft05M66/TB7skj7P3bOku+qW8MavWMOKTIfwWDdGpYq+uWfvBQbZh
        Tqe9/977dQYwcfRYQZUEsmEpZ/RqDSM+GcJvfnhOnT3VH9vwXu/ZulK68Vsbu4d0UFYAqhiQHWfbulFr
        GPHJEH42NPbp0iTP2HvVE7o8ku2Z/Dhd0as1jPhkCL80i920999nZxcM6SC4eiafeoterWHEJ0P4qVJO
        UlL77/YMU1UAyIdO0as1jPhkCD9VyklKquDZfwcFn10yhJ8q5STZFpAq7H6xPQMKPrtkCD9VykmyT76q
        wu4XBQ8KPrtkCL80Lovs1ti+QxZ2vyh4UPDZJUP4pV3wdrdJVdj94BOsMBR8dskQfqkX/ORxWdr9qJTn
        +AQrKPgMkyH80i74k6fKWZV2P4ozRQoeFHyGyRB+qRd8AveAP3DwEAWPt+3DTmoNIz4Zwi/Ngre/WxV2
        v+z5q2rgkS8UfHbJEH4RCn7vvgMUPCj4DJMh/EKcwR+eoOBBwWeYDOGXdsHXJo7J0u6oN3Tebf3Gpy5X
        A498oeCzS4bwS7PgTevQIVna/XjyN89zHxpQ8BkmQ/ilXfDNXbtlafdjO3eSxCkUfHbJEH5pF3wStyrg
        KhoYe2arWsOIT4bwS7vg6889f74q7X5MT89Q8Dlnt6qwtaDWMOKTIfxSL/gNv7q4t7D7VatWuRdNzlHw
        2SZD+BWvvm5aFXNSqnffd1VvYQ+Cgs83Cj7bZAi/2c9ff0AVc1JK1395d29ZD+Ku1Q89oAYf+UDBZ5sM
        4Vf60vKXVTEnpXjlJ8u9ZT2IbTt2vksNPvKBgs82GcKvfOO3NqpiTort8Sdxw7Gjx97ijdYco+CzTYbw
        m1vxvVWqmJPUmjohS7sfPPQj3+xWwbYO1BpGfDKEX+VHd35BlXKSmrv3yNLu19r1G65Vw4/so+CzTYbw
        G0bBJ3UlzZ69+9imySkKPttkCL/q3fdepUo5SaXlN27uLetBVCsVtmlyioLPNhnCr/rgwx9SpZyk9hut
        p8q5t7AH8V/3PrBeFQCyjYLPNhnCr7b+sUtVKSet+eY+Wdj94vF9+UTBZ5sM4We3ElCFnLTag2s+1FvW
        g7AbTv34vgfWqRJAdlHw2SZD+DWee/58VchJKye0D2927nr9HFUCyC4KPttkCL/Gtu3vUIWcNNuHb00c
        lYXdL66Jzx+7F7wde7WGEZ8M4dd8dVdBFXIaao+uf19vWQ/qtd17OIvPEQo+22QIP3vzU5VxGmY/98UD
        vUU9KDuLv2/NultVGSB7KPhskyH8WseODa3gTevIxKKyHtShw0fYqskJCj7bZAi/YRd8Up9q7bj/54/e
        oAoB2ULBZ5sM4Wc3AlNFnJb2m61TU4uKelD26dZ7Hlp7uyoFZAcFn20yhF9jpjjUgjeltY98oLeoPfYd
        ZKsm6yj4bJMh/OwWAqqE09S+dUGjsaioPZ7evPUSSj67KPhskyH8TtZqQy94U1//y0t6S9pr67YdF6py
        QHwUfLbJEH42NHZGrUo4TcXrPjvZKhYXFLSX3caAM/lsouCzTYbws6EZRcGbpO5P0+unD65dqUoCcVHw
        2SZD+NnQjKrg7etW9ry5oJyT0KjXC089t+VSVRSIqVGrtY+tWsOIT4bws6GZ+cjHq6qAh6F483fXJfFQ
        7l62XfP8S9svYrsmPjuGdjztuKo1jPhkCD8bmuI1n55S5Tssabzh2vHE089dRsnHZsevczzVGkZ8MoSf
        DU15+Q2bVfEOy/SfLWu1Dh5aUMxJ2rln7zso+bgo+OyTIfxsaMorblmlineYyt/8zvqTc3MLijlJx96a
        LNy1+sEHVIFgvFHw2SdD+NnQVO5YuVyV7rCldVVNR71W45muAXUe9mHUGkZ8MoSfDU3lR3d+QRXusNlV
        NY3NW87rDHMa7M06eyIUWzZxUPDZJ0P42dDU1v7iMlW4o1C88pPlpB7QfSYnTkwXHl6/4TMU/fij4LNP
        hvCzoakN6cHbS1W87u8nW4ePLCjktPDJ1/FHwWefDOFnQ1Pf9PSFqmhHaeaKv67bjdA6g52mmZli4bGN
        my6n6McTBZ99MoSfDU1j+46R3HDsbMrf+PaG1onpBWWcpl1cTjmWOrcpMGoNIz4Zws+Gprln71gWvLFL
        OO2hJJ0BT5u9CfvYE5v+lKIfHxR89skQfu1SO3R4bAvelJffuLk1cXR+yIehWCwWbGuAoh89Cj77ZAg/
        G5rW8eNjXfBm9nNfPNDcd2B+0IdlcvJ44ZENG6+i6EeHgs8+GcKvPTgjeKrTIOw6+ea+/fPDPkxHj71V
        eHTDxo9Q9MNHwWefDOHXHpwgBW+s5OvPbj6/M/DDZrc8WP/4rz9M0Q8PBZ99MoRfe3AajZHdE34Q9r22
        b2swpMsolampE4X71qy7laJPHwWffTKEX2dwIhV8x9yt31/ZOnVG3fkZRmF2dpb7zqeMgs8+GcKvMzgR
        C97YB6Kau3bP/xyjMjNbKry2e885d61+6AHKPlm1KgWfdTKEX2dwih/5eEUVaATtLZtfPPono9yy6XZk
        4mh7+0aVFfpjvyw7j+szag0jPhnCrzM4xc/8wxFVnpEUv/HtjdU3R3OVTa/WKVPTxcLWl3e++67V/8NZ
        /YDsdet+XdUaRnwyhF9ncMpf++dNqjSjsbP5+uNPvCeN57x62NU39//80Rso+v5Q8PkgQ/h1Bqd883fX
        qMKMqvjpzx9pHTs2//ONi7lyubDjtd3vvGvVg2tUoWGh7huNGbWGEZ8M4dcZnHF56EeS7Gzefq7OE/nH
        iX1PhyeOchfLs6Dg80GG8OsMTu3Bhz+kSjILZq7/yhuNHa/M/6zjpjJXKTzx9HOXUfSLUfD5IEP4dQan
        PmYP/Uianc3b+wytmeL8zzxu7Hpve5zgD3/6s42q7PKIgs8HGcKvMziNLVvPVcWYNe1LKtes/cAw7zPf
        r0a9Xtjz5v7CPQ+tvT3vZ/UUfD7IEH6dwbEPC6lCzKqZKz5arz224b0nS6X512Ac7Tvwu8Ltd93zW1V+
        edD9KVaj1jDikyH8OoPTOjKRq4LvaF9WueFXF3eXyDh6fd/vCvc8/Eju7n1DweeDDOHXGZzW1FQuC95Y
        yRev+fRUfcPjF58szi4olHHTbDQK+w8cbD+MRBVi1lDw+SBD+M0PT7mc24LvZve2qa1dd1nr+NSCYhk3
        dpnllpe2Zf4mZxR8PsgQfvPDE+yWwWmz12LuX/71TvuXTXfBjJtmvZ7poqfg80GG8OseHgp+MXtN7MHf
        jW3b33Gy666G46YyN5fJZ8hS8PkgQ/h1Dw8Ff2bFq6+brj2y/v2tydHeg/5Mjh+fytT+PAWfDzKEX/fw
        UPBLY69T6fov725s37Hg9RsXtj//7AsvXhz9bN6+fwo+H2QIv+7hKX3ln36rCg2aFf3Msivr1XtWL6vs
        2dt+H6P79Ry1cqkUetvGvu/en0mtYcQnQ/h1D0/5ppvXqyLD0tgVONXV918+bls4e/cdCLltQ8Hnhwzh
        1z081Z/c/QlVXOhPewvnpu9ssNs/nJybW/Aaj8qJEyfCnc1T8PkhQ/h1D0/twTWZvaPkqFjZV+5YuXxc
        LreMtDdvv5B6v3+1hhGfDOHXPTxZv6PkKFnR20NIGi+8+M7u13wUpqdnChFKnoLPDxnCr3t47KoQVU5I
        jhX97D/845v1Tc9caJ8e7n79h8k+IDXuWzYUfH7IEH7dw9Pct5+CH6LiVVeXa4+uf98ob108zls2vZdI
        GrWGEZ8M4dc9PHb1hyoipMvO6u2JWqPap5+cPD6WWzYUfH7IEH7dw9MqlSj4EWoXvd3obARn9PYwcNsS
        UUU7KhR8fsgQfgsGiBuOjQU7Bvaw8JP1+sLjkzLblx+nM3kKPj9kCL/eAaLgx8f01dcWy08+c1GzWi3U
        GwuPU1rG6c1XCj4/ZAi/3gGyR9mpssHozPz5XzYrr7y26FiladQlb1+7Uast+r7UGkZ8MoRf7wDZk41U
        yWC07F9Wpbvv+0Tv8UrT05tfuGRUJW9fV31Pag0jPhnCr3eAyjd/d40qGIyelXzxmr+bag3xsYKjOpOn
        4PNFhvDrHSB7c0+VC8aHFX39mWff3Xvs0jKKq2vsa6rvRa1hxCdD+PUOEPejicFK3t4vaU0eX3QMk2b3
        lx92yVPw+SJD+PUOUP3Jpy5UhYLxZCXf3P36ouOYtHq1NtRLKCn4fJEh/HoHqPHKq3zYKZj2G7Bf+urL
        vccyaaXZ3z9ARBVy0tQlkkatYcQnQ/j1DlDz0GEKPqDOls3JSmXRMU3Slpe2XTSMM3kKPl9kCL/eAWpN
        T1PwgbX35U8dw97jmqRhnMVT8PkiQ/gtGqJajU+zBtfelz98ZPGxTYh9ACnts3gKPl9kCD81RBR8fHYM
        a2vWfkAd3yQcPfZWqiVPweeLDOGnhsiePKRKA7G0z+RfeVUe4ySktVVjvzjsnjjqa6o1jPhkCD81RHMr
        vrdKFQbisTP55ht75XH2qlYqqZzFn+4SSaPWMOKTIfzUEPFp1myxkq9v2XquOtZedlWNKmkPCj5/ZAg/
        NUT1DY/z8O2MaV9dk8I9bNK4hzwFnz8yhJ8aosb2l7lUMoPa18mL4+21Z+++girqQZ3uDVaj1jDikyH8
        1BC1fneQgs+g9pU1a9ddpo65h92rJsmzeAo+f2QIPzVEJ2dmKPiMar/peuoXuDzuDknuxVPw+SND+Kkh
        4sNO2dbeqqmevkQHkeQVNRR8/sgQfmqIDAWfbcVPXTutjrtHEtfF2y8JCj5/ZAg/NUSGR/dlm/0Cr9yx
        crk69oOamppyn8Xbf6/+7g61hhGfDOGnhshwLXz2tbdqxIOtPbwFf6ZLJI1aw4hPhvBTQ2S4Fj4faht+
        dbE6/oPybtNQ8PkkQ/ipITLNV3dxJU0OJH1t/PHjU65r4s+0/27UGkZ8MoSfGiJTmzhGwedE7aVt56g1
        MAjvJ1sp+HySIfzUELVVq1xJkxNJn8V7tmko+HySIfzUEHVML7uyoQoB2ZL0h58OHDw00DaNnfnbp2LV
        39mh1jDikyH81BB1FG/81iZVCMie4lVXl9UaGETt1L/+BtmmOdsbrEatYcQnQ/ipIeqYvX3lN1UZIHvs
        LL51ZEKug0FQ8OiHDOGnhqij/MSm96gyQDZV7129TK2DQQyyD3+2/Xej1jDikyH81BB1VHbt4UqaHEny
        zdYXt++4QJX4mVDw+SVD+Kkh6qhPnaDgc8S2aU6e5U3OpZo4eqzvN1op+PySIfzUEHXYFQ3Tf/FXTVUG
        yKbmW5NyLfSr3+vh7c9S8PklQ/ipIepWXnELD+DOker6X16q1sEg+in4pbzBatQaRnwyhJ8aom61df/7
        flUEyKYk9+EpeCyVDOGnhqgb96TJl/Y+vFgHg+jnSpqlbM8YtYYRnwzhp4aoW2t6hlsW5Ej7evhiUa6F
        flHwWCoZwk8NUS8KPl9q6x5d0nbJ2by887XzVJn3sq2cxhLvS6/WMOKTIfzUEPXijdZ8qdx931VqHfRr
        /4GDS7pUcqn770atYcQnQ/ipIerFG635Uv72inVqHfTrxIkTFDyWRIbwU0PUizda86X4sWtKah30a3Z2
        dkkFv9T9d6PWMOKTIfzUEC1SqRRKy2/YrMoA2ZPUpZLFmeJZC97O3il4yBB+aoiU5q7dvNmaE0kVvN02
        WJV6x1I/vdpNrWHEJ0P4qSE6neqq+z+sCgHZktS18HZljCr2jn7L3ag1jPhkCD81RKdj18TP/u1nJlUp
        IDuSKni7l5EqdjPI2btRaxjxyRB+aojOpLFl67ls1WRbUgVvNxxLstyNWsOIT4bwU0N0NqXrv7xbFQOy
        Ie2C7+eyyF5qDSM+GcJPDdHZtCaO8oZrhiVV8GoP3nP2btQaRnwyhJ8aoo56Q+emvOHx91Ly2ZTUVTTl
        UnnRHSU9Z+9GrWHEJ0P4qSFaqsqzz7+Lks+etG4ZbOX+9OYXLlF/bqnUGkZ8MoSfGqJ+zP3wzi+qkkBc
        aRS8d2umQ61hxCdD+Kkh6tfMsivrqigQU+Und/+NOs6DsGJPqtyNWsOIT4bwU0PUr9aJ6YKd9amyQDxJ
        F7x3372bWsOIT4bwU0M0iObBQ1xZkxH1zVvOU8e4X3argiTL3ag1jPhkCD81RIOqP/Psuyn52NqXSJbL
        8vj2K6ltmW5qDSM+GcJPDZHH3L/9x62UfFztghfHdRAUPJZKhvBTQ+TFfnxcSV5Bkwa1hhGfDOGnhsir
        VSpT8kFR8BgFGcJPDVEiqlVKPqAkr6BJg1rDiE+G8FNDlJhKhZIPxPbfW9PT+liOCbWGEZ8M4aeGKFFz
        c5R8EEm+wZoWtYYRnwzhp4YocWX25CMY9/13o9Yw4pMh/NQQpcE+CEXJj7dx3383ag0jPhnCTw1RWlrF
        WUp+TEU4ezdqDSM+GcJPDVGaOJMfTxQ8RkmG8FNDlLpKpVC86uoyn3gdH42tL50jj9WYUWsY8ckQfmqI
        hqX4qWunKfnRi3L2btQaRnwyhJ8aomGau/dnyyj50bHXPsKbqx1qDSM+GcJPDdGw1Z965gJKfjQinb0b
        tYYRnwzhp4ZoFJqv7uJ+8iMQ6ezdqDWM+GQIPzVEo9KaOMoVNkMU7ezdqDWM+GQIPzVEo9QqFin5IbB/
        LVXvXb1MHYNxptYw4pMh/NQQjVy9zhU2KYt49m7UGkZ8MoSfGqJx0di+g335FNhrag9KV6/5uFNrGPHJ
        EH5qiMZJc3qmvWVD0Scn2hur3dQaRnwyhJ8aonFU+tJXX6bk/dpbM42GfI0jUGsY8ckQfmqIxlXzEPex
        8WiXe70uX9so1BpGfDKEnxqisVarFcorblnF2Xx/rNyb+/br1zQQtYYRnwzhp4YogsqP//tazuaXxl6n
        yPvu3dQaRnwyhJ8aoijsShArL87mT89em6yUu1FrGPHJEH5qiKLp7M1T9AtlrdyNWsOIT4bwU0MUlV03
        z7bN72VpW6abWsOIT4bwU0MUWqNRKH39pk15PZvvnLU3d+/Rr09wag0jPhnCTw1RJszNFeZu+8HteSl6
        +zntrL01PaNfj4xQaxjxyRB+aoiypDV5vFD82DWlrBb9fLEfmZA/f9aoNYz4ZAg/NURZ1NzzRqbeiLWf
        w7ZiGq+8Kn/erFJrGPHJEH5qiLKs+crO0EXfOWOvrln7QfXzZZ1aw4hPhvBTQ5QHrdnZ9oelohR9p9ht
        y0n9PHmh1jDikyH81BDlSr1eqP36qT8Y17P6TrFXHv/1H8rvP2fUGkZ8MoSfGqK8ar6xd2y2bzrFbtf2
        q+81r9QaRnwyhJ8aorxrTZ0olFd8b5UVrCrftHRKvfqTuz/Rmo75QI60qTWM+GQIPzVE+H9zc4XKHSuX
        p31W3yn2+pat58rvA/PUGkZ8MoSfGiIIp8q+/sSmi5Iq+/lSf+qZC05Wq/prYhG1hhGfDOGnhghn1iqV
        25+S7bfsO6Vu/ypozRTl340zU2sY8ckQfmqIsHStUqlQW//Ypacre8tNY+uL53Cm7qfWMOKTIfzUEGEw
        dn96e9pUp9Trz24+P/oj8saNWsOIT4YAgPhkCACIT4YAgPhkCACIT4YAgPhkCACIT4YAgPhkCACIT4YA
        gPhkCACIT4YAgPhkCACIT4YAgPhkCACIT4YAgPhkCACIT4YAgPhkCACIT4YAgOjeLvwfdAzHPc3Zbl0A
        AAAASUVORK5CYII=
</value>
  </data>
</root>